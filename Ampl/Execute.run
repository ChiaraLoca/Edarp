reset;

/*Istruisce AMPL ad usare cplex one = 37.76
*/
option solver cplex;
/*Istruzioni di cplex*/
option cplex_options 'mipemphasis=1 mipdisplay=2 timelimit=3600';

/*Mostra fino alla seconda cifra decimale*/
option display_round 2;

model Model.mod;
data  a2-16-0.7.dat;

solve; 


printf '\nSTART SOLVING\n\n';


printf 'PARAMETER';
printf '\nObjective function weight factors:\n';
display w1,w2;

printf 'Time horizon [min]:\n';
display Tp;

printf 'Number of customers:\n';
display n;

printf 'Number of origin depots,destination depots and recharging stations:\n';
display O, F, S;

printf 'Number of vehicles:\n';
display numVehicles;

printf 'Capacity of vehicles (C):\n';
display c;

printf 'Initial battery range level of vehicles (B0 in kWh):\n';
display Binit; 

printf 'Available battery range for the vehicles at every node (Q in kWh):\n';
display Q;

printf 'Maximum battery emptiness at end depots (r)(% of the available battery range Q):';
print '';
display r;

printf 'Vehicles consumption rates (beta in  kWh/min):\n';
display beta;

printf 'Recharging rates at stations (alpha in kWh/min):\n';
display alpha;

print '';

printf 'Objective Value:\n';
display one;	

print 'SOLUTION';

display	 X;
print '';

display	 T;
print '';

display	 L;
print '';

display B;
print '';

display E;
print '';

display R;
print '';

printf '\ti,\t j,\t T[i],\t\t T[j],\t\t arr[i],\t\t dep[i],\t\t arr[j],\t\t dep[j],\t\t t[i,j],\t\t B[i]\n';
for {k in K}{
	printf 'Vehicle %d:\n',k;
	for {i in V, j in V} {
		if X[k,i,j] = 1 then {
			printf '\t%d,\t %d,\t %f,\t %f,\t %f,\t %f,\t %f,\t %f,\t %f,\t %f\n',
			i, j, T[k,i], T[k,j], arr[i], dep[i], arr[j], dep[j], t[i,j], B[k,i];
			print '';
		}
		
	}
}


printf 'Number of visited stations (per vehicle):\n';
display {k in K}
	(sum{s in S, i in V} X[k,s,i]);

printf 'Charging time (per vehicle):\n';
printf {k in K}'%f\n',sum{s in S} E[k,s];

/* 	# Uncomment for parser output
	# !) Works only if opened as administrator
	# !) For some apml version this code dosen't work

printf '\n-------------------OUTPUT FOR PARSER-------------------\n';
#Open the log file
option log_file "outForParser.txt";

for {k in K} {
	printf 'X[%d,*,*]: \n',k;
	for{i in V} {
		for{j in V} {
			printf '%d,',X[k,i,j];
		}
		printf '\n';
	}
}

printf 'T:\n';
for {k in K} {
	for {i in V} {
		printf '%f,',T[k,i];   
	}
	printf '\n';
}
print '';

printf 'L:\n';
for {k in K} {
	for {i in V} {
		printf '%f,',L[k,i];   
	}
	printf '\n';
}
print '';

printf 'B:\n';
for {k in K} {
	for {i in V} {
		printf '%f,',B[k,i];   
	}
	printf '\n';
}
print '';

printf 'E:\n';
for {k in K} {
	for {s in S} {
		printf '%f,',E[k,s];   
	}
	printf '\n';
}
print '';


printf 'R:\n';
printf {i in P} '%f\n',R[i];
print '';


#Close the log file
option log_file ""; 
close; */

